<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:av="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="av" x:Class="EzPPPwn.MainWindow"
        xmlns:chapter="clr-namespace:Chapter.Net.WPF.SystemTray;assembly=Chapter.Net.WPF.SystemTray"
        Title="EzPPPwn by ItsJokerZz" Height="510" Width="764"
        ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen"
        Background="{DynamicResource ColorDarkBrush}">

    <Window.Resources>
        <Color x:Key="PrimaryColor">#007ACC</Color>
        <Color x:Key="ColorDark">#2D2D2D</Color>
        <Color x:Key="ColorDarker">#1E1E1E</Color>
        <Color x:Key="ColorGray">#666666</Color>
        <Color x:Key="ColorText">#F0F0F0</Color>
        <Color x:Key="ColorTextSecondary">#CCCCCC</Color>

        <SolidColorBrush x:Key="ColorPrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="ColorDarkBrush" Color="{StaticResource ColorDark}"/>
        <SolidColorBrush x:Key="ColorDarkerBrush" Color="{StaticResource ColorDarker}"/>
        <SolidColorBrush x:Key="ColorGrayBrush" Color="{StaticResource ColorGray}"/>
        <SolidColorBrush x:Key="ColorTextBrush" Color="{StaticResource ColorText}"/>
        <SolidColorBrush x:Key="ColorTextSecondaryBrush" Color="{StaticResource ColorTextSecondary}"/>
        <SolidColorBrush x:Key="ScrollbarTrack" Color="#333333"/>

        <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ThinScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Width" Value="6"/>
            <Setter Property="MinWidth" Value="6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid Background="{StaticResource ScrollbarTrack}" Width="6">
                            <Track x:Name="PART_Track" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.LineUpCommand"
                                                  Style="{StaticResource ScrollBarLineButtonStyle}"
                                                  Background="{StaticResource ScrollbarTrack}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Background="{StaticResource ColorPrimaryBrush}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" CornerRadius="3"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.LineDownCommand"
                                                  Style="{StaticResource ScrollBarLineButtonStyle}"
                                                  Background="{StaticResource ScrollbarTrack}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DarkComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource ColorDarkerBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ColorTextSecondaryBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ColorGrayBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Height" Value="34"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Tag" Value="Select an option..."/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          Focusable="False">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="6">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0"
                                                           Margin="8,0,0,0"
                                                           VerticalAlignment="Center">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Text" Value="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                                                            <Setter Property="Foreground" Value="{StaticResource ColorTextBrush}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="{x:Null}">
                                                                    <Setter Property="Text" Value="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
                                                                    <Setter Property="Foreground" Value="{StaticResource ColorTextSecondaryBrush}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <Path Grid.Column="1" 
                                                      Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                                                      Fill="{StaticResource ColorTextSecondaryBrush}"
                                                      Width="16" Height="16"
                                                      Stretch="Uniform"
                                                      Margin="8,0,8,0"
                                                      VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="Slide"
                                   Width="{Binding ActualWidth, ElementName=ToggleButton}">
                                <Border Background="{StaticResource ColorDarkerBrush}"
                                        BorderBrush="{StaticResource ColorGrayBrush}"
                                        BorderThickness="1"
                                        CornerRadius="6"
                                        Margin="0,4,0,0">
                                    <ScrollViewer MaxHeight="200"
                                                  VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Disabled"
                                                  Padding="0" >
                                        <ScrollViewer.Resources>
                                            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ThinScrollBar}" />
                                        </ScrollViewer.Resources>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource ColorPrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource ColorPrimaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DarkComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ColorTextSecondaryBrush}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ColorDarkBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ColorTextBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource ColorDarkBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource ColorTextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ColorTextBrush}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="0,0,16,0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" 
                                    x:Name="CheckBoxBorder"
                                    Width="18" Height="18" 
                                    Background="{StaticResource ColorDarkerBrush}"
                                    BorderBrush="{StaticResource ColorGrayBrush}"
                                    BorderThickness="2"
                                    CornerRadius="3"
                                    Margin="0,0,10,0"
                                    VerticalAlignment="Center">
                                <Path x:Name="CheckMark"
                                      Data="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z"
                                      Fill="{StaticResource ColorPrimaryBrush}"
                                      Width="12" Height="12"
                                      Stretch="Uniform"
                                      Opacity="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                            </Border>

                            <ContentPresenter Grid.Column="1" 
                                              Content="{TemplateBinding Content}"
                                              VerticalAlignment="Center"
                                              Margin="0,1,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Opacity" Value="1"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource ColorPrimaryBrush}"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource ColorDarkBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource ColorPrimaryBrush}"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource ColorDarkBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource ColorGrayBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ColorPrimaryBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource ColorTextBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#004A8E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ColorTextBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Margin="8,4"
                                          VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <Grid Margin="25">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="80.62"/>
            <RowDefinition Height="Auto" MinHeight="0"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="0" Margin="2,5,0,15" Width="658">
            <StackPanel Orientation="Vertical" Width="184" Margin="0,0,20,0">
                <TextBlock Text="Network Adapter:" Foreground="{StaticResource ColorTextBrush}" FontSize="14" FontWeight="Bold" Margin="0,0,0,8" TextAlignment="Center" Width="183"/>
                <ComboBox x:Name="NetworkAdapterComboBox" Height="34" FontSize="14" FontWeight="Bold" Style="{StaticResource DarkComboBox}" ItemContainerStyle="{StaticResource DarkComboBoxItem}"/>
            </StackPanel>

            <StackPanel Orientation="Vertical" Width="116">
                <TextBlock Text="Select Firmware:" Foreground="{StaticResource ColorTextBrush}" FontSize="14" FontWeight="Bold" Margin="0,0,0,8" TextAlignment="Center"/>
                <ComboBox x:Name="FirmwareComboBox" FontSize="14" FontWeight="Bold" SelectedIndex="22" Style="{StaticResource DarkComboBox}" ItemContainerStyle="{StaticResource DarkComboBoxItem}">
                    <ComboBoxItem Content="7.00"/>
                    <ComboBoxItem Content="7.01"/>
                    <ComboBoxItem Content="7.02"/>
                    <ComboBoxItem Content="7.50"/>
                    <ComboBoxItem Content="7.51"/>
                    <ComboBoxItem Content="7.55"/>
                    <ComboBoxItem Content="8.00"/>
                    <ComboBoxItem Content="8.01"/>
                    <ComboBoxItem Content="8.03"/>
                    <ComboBoxItem Content="8.50"/>
                    <ComboBoxItem Content="8.52"/>
                    <ComboBoxItem Content="9.00"/>
                    <ComboBoxItem Content="9.03"/>
                    <ComboBoxItem Content="9.04"/>
                    <ComboBoxItem Content="9.50"/>
                    <ComboBoxItem Content="9.51"/>
                    <ComboBoxItem Content="9.60"/>
                    <ComboBoxItem Content="10.00"/>
                    <ComboBoxItem Content="10.01"/>
                    <ComboBoxItem Content="10.50"/>
                    <ComboBoxItem Content="10.70"/>
                    <ComboBoxItem Content="10.71"/>
                    <ComboBoxItem Content="11.00"/>
                </ComboBox>
            </StackPanel>
        </StackPanel>

        <Grid Grid.Row="2" Margin="0,10,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Text="Debug Output:" Foreground="{StaticResource ColorTextBrush}" FontSize="14" FontWeight="Bold" Margin="0,0,0,12"/>

            <Border Grid.Row="1" Background="{StaticResource ColorDarkerBrush}" 
                    BorderBrush="{StaticResource ColorGrayBrush}" 
                    BorderThickness="1" 
                    CornerRadius="6" 
                    Padding="0">
                <ScrollViewer Height="170" 
                              VerticalScrollBarVisibility="Visible" 
                              HorizontalScrollBarVisibility="Disabled" 
                              Background="Transparent" 
                              Padding="0">
                    <ScrollViewer.Resources>
                        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ThinScrollBar}" />
                    </ScrollViewer.Resources>
                    <TextBox x:Name="LogBox" Style="{StaticResource RoundedTextBox}" IsReadOnly="True" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Disabled"/>
                </ScrollViewer>
            </Border>

            <Grid Grid.Row="2" Margin="0,20,0,8">
                <TextBlock Text="Progress:" Foreground="{StaticResource ColorTextBrush}" FontSize="12" FontWeight="Bold" HorizontalAlignment="Left"/>
                <TextBlock x:Name="ProgressPercentLabel" Text="0%" Foreground="{StaticResource ColorTextBrush}" FontSize="12" FontWeight="Bold" HorizontalAlignment="Right"/>
            </Grid>

            <Border Grid.Row="3" Background="{StaticResource ColorGrayBrush}" 
                    CornerRadius="5" 
                    Height="12" 
                    Margin="0,0,0,0">
                <ProgressBar x:Name="ProgressBar" 
                             Height="12" 
                             Minimum="0" 
                             Maximum="100" 
                             Value="0" 
                             Background="Transparent" 
                             Foreground="{StaticResource ColorPrimaryBrush}" 
                             BorderThickness="0" 
                             Margin="0"/>
            </Border>

            <Button Grid.Row="4" x:Name="ProcessButton" Width="130" Height="40" Content="Start Process" Style="{StaticResource RoundedButton}" FontSize="16" Padding="5" Click="ProcessButton_Click" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,10"/>
            <Button Grid.Row="4" x:Name="OverrideStage2Button" Width="219" Height="40" Content="Override Stage2 Payload" Style="{StaticResource RoundedButton}" FontSize="16" Padding="5" Click="OverrideStage2Button_Click" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,138,10"/>
        </Grid>

        <Border Margin="348,26,0,16" HorizontalAlignment="Left" Width="349" 
                Background="{StaticResource ColorDarkerBrush}" 
                BorderBrush="{StaticResource ColorGrayBrush}" 
                BorderThickness="1" 
                CornerRadius="6" 
                Padding="15,10,15,10">
            <StackPanel Orientation="Horizontal">

                <CheckBox x:Name="AutoRetryCheckBox" 
                          Content="Auto Retry" 
                          Checked="AutoRetryCheckBox_Checked" 
                          Unchecked="AutoRetryCheckBox_Checked" 
                          Style="{StaticResource ModernCheckBox}"/>

                <CheckBox x:Name="UseBetaCheckBox" 
                          Content="PPPwn Beta" 
                          Checked="UseBetaCheckBox_Checked" 
                          Unchecked="UseBetaCheckBox_Checked" 
                          Style="{StaticResource ModernCheckBox}"/>

                <CheckBox x:Name="VtxCheckBox" 
                          Content="VTX/PS4-HEN" 
                          Checked="VtxCheckBox_Checked" 
                          Unchecked="VtxCheckBox_Checked" 
                          Style="{StaticResource ModernCheckBox}"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
